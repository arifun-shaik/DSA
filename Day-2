FIRST N FIBANOCCI SERIES

// User function Template for Java

class Solution {
    // Function to return list containing first n fibonacci numbers.
    public static int[] fibonacciNumbers(int n) {
        int[] fib = new int[n];
        
        if(n >= 1) fib[0] = 0;
        if(n >= 2) fib[1] = 1;
        
        for(int i = 2; i < n; i++){
            fib[i] = fib[i - 1] + fib[i - 2];
        }
        return fib;
    }
}

RECURSIVE APPROACH

// User function Template for Java

class Solution {
    // Function to return list containing first n fibonacci numbers.
    public static int[] fibonacciNumbers(int n) {
        int[] fib = new int[n];
        
        for(int i = 0; i < n; i++){
            fib[i] = fibanocci(i);
        }
        return fib;
    }
    public static int fibanocci(int n){
        if(n <= 1) 
            return n;
        return fibanocci(n - 1) + fibanocci(n - 2);
    }
}

NTH FIBANOCCI NUMBER


class Solution {
    public int nthFibonacci(int n) {
        // code here
        int a = 0, b = 1;
        while(a < n){
            int next = a + b;
            a = b;
            b = next;
        }
        return a;
    }
}
